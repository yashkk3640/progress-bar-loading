{"version":3,"sources":["../../dist/index.js","App.js","index.js"],"names":["ProgressBar","_ref","_ref$height","height","_ref$loadingTime","loadingTime","_ref$completeTIme","completeTIme","flag","React","createElement","className","style","opacity","animation","maxWidth","background","backgroundSize","App","useState","loading","setLoading","toggle","l","role","aria-label","onClick","marginLeft","ReactDOM","render","document","getElementById"],"mappings":"qRA6BeA,EArBG,SAAqBC,GACrC,IAAIC,EAAcD,EAAKE,OACnBA,OAAyB,IAAhBD,EAAyB,MAAQA,EAC1CE,EAAmBH,EAAKI,YACxBA,OAAmC,IAArBD,EAA8B,KAAOA,EACnDE,EAAoBL,EAAKM,aACzBA,OAAqC,IAAtBD,EAA+B,KAAOA,EACrDE,EAAOP,EAAKO,KAChB,OAAoBC,IAAMC,cAAc,MAAO,CAC7CC,UAAW,eACXC,MAAO,CACLC,QAASL,EAAO,EAAI,EACpBM,WAAYN,EAAO,WAAaH,EAAc,YAAcE,GAAgB,iCAC5EQ,SAAUP,EAAO,MAAQ,OACzBL,OAAQA,EACRa,WAjBW,yHAkBXC,eAAgB,WCuBPC,G,MA1CH,WACV,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAS,kBAAMD,GAAW,SAACE,GAAD,OAAQA,MACxC,OACE,6BACE,kBAAC,EAAD,CAAaf,KAAMY,IACnB,2DAC+B,IAC7B,0BAAMI,KAAK,MAAMC,aAAW,SAA5B,iBAIF,6BACGL,EACC,oCACE,oEACA,uEAGF,oCACE,iDACA,qFAIN,yBAAKT,UAAU,cACZS,EACC,4BAAQM,QAASJ,GAAjB,oBAEA,4BAAQI,QAASJ,GAAjB,kBAGJ,wBAAIX,UAAU,cAAd,gBAEE,0BAAMC,MAAO,CAAEe,WAAY,OAASH,KAAK,MAAMC,aAAW,SAA1D,oBCjCRG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.60a96960.chunk.js","sourcesContent":["import React from 'react';\n\nvar DARK = 'blue';\nvar NORMAL = 'blue';\nvar LIGHT = 'lightblue';\nvar LIGHT_SKY = 'deepskyblue';\nvar BACKGROUND = \"repeating-linear-gradient(to right, \" + DARK + \", \" + DARK + \", \" + NORMAL + \", \" + NORMAL + \", \" + LIGHT + \", \" + LIGHT_SKY + \", \" + LIGHT + \", \" + NORMAL + \", \" + NORMAL + \", \" + DARK + \", \" + DARK + \")\";\n\nvar ProgressBar = function ProgressBar(_ref) {\n  var _ref$height = _ref.height,\n      height = _ref$height === void 0 ? '4px' : _ref$height,\n      _ref$loadingTime = _ref.loadingTime,\n      loadingTime = _ref$loadingTime === void 0 ? '5s' : _ref$loadingTime,\n      _ref$completeTIme = _ref.completeTIme,\n      completeTIme = _ref$completeTIme === void 0 ? '1s' : _ref$completeTIme,\n      flag = _ref.flag;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    style: {\n      opacity: flag ? 1 : 0,\n      animation: (flag ? 'loading ' + loadingTime : 'complete ' + completeTIme) + ', color-transition 2s infinite',\n      maxWidth: flag ? '90%' : '100%',\n      height: height,\n      background: BACKGROUND,\n      backgroundSize: '300%'\n    }\n  });\n};\n\nexport default ProgressBar;\n","import React, { useState } from 'react'\n\nimport ProgressBar from 'progress-bar-loading/dist'\nimport 'progress-bar-loading/dist/index.css'\n\nconst App = () => {\n  const [loading, setLoading] = useState(true)\n  const toggle = () => setLoading((l) => !l)\n  return (\n    <div>\n      <ProgressBar flag={loading} />\n      <h1>\n        Progress Bar Loading Example{' '}\n        <span role='img' aria-label='smile'>\n          ðŸ˜„\n        </span>\n      </h1>\n      <div>\n        {loading ? (\n          <>\n            <h3>We are doing something in background</h3>\n            <div>Wait.., it's wll be completed shortly</div>\n          </>\n        ) : (\n          <>\n            <h3>Process Completed</h3>\n            <div>You can start another process to saw Loading again</div>\n          </>\n        )}\n      </div>\n      <div className='button-div'>\n        {loading ? (\n          <button onClick={toggle}>Complete Process</button>\n        ) : (\n          <button onClick={toggle}>Start Process</button>\n        )}\n      </div>\n      <h2 className='thanks-div'>\n        Thank You !!!\n        <span style={{ marginLeft: '5px' }} role='img' aria-label='smile'>\n          ðŸ¤—\n        </span>\n      </h2>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}